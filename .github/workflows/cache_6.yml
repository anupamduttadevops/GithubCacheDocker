name: cache_6
on:
  workflow_dispatch:

jobs:
  build:
    name: Build Docker Image with Cached Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.5

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'

      - name: Cache Go modules
        id: cache-go-mod
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      # This step builds the Go application with the necessary environment variables
      - name: Build the application
        run: CGO_ENABLED=0 GOOS=linux go build -o myapp .

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile', '**/go.sum', '**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-docker-
            
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        run: |
          docker build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t myapp:latest .

      - name: Replace old cache with new cache
        if: success()
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache







# name: cache_6
# on:
#   workflow_dispatch:

# jobs:
#   build:
#     name: Build Docker Image with Cached Dependencies
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4.1.5

#       - name: Set up Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: '1.21'

#       - name: Cache Go modules
#         id: cache-go-mod
#         uses: actions/cache@v2
#         with:
#           path: ~/go/pkg/mod
#           key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#           restore-keys: |
#             ${{ runner.os }}-go-

#       - name: Install dependencies
#         run: go mod download

#       # This step builds the Go application with the necessary environment variables
#       - name: Build the application
#         run: CGO_ENABLED=0 GOOS=linux go build -o myapp .

#       # - name: Set up Docker Buildx
#       #   uses: docker/setup-buildx-action@v3
#       #   with:
#       #     install: true

#       - name: Cache Docker layers
#         uses: actions/cache@v2
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile', '**/go.sum', '**/go.mod') }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-

#       - name: Build Docker image
#         uses: docker/build-push-action@v5.3.0
#         with:
#           context: .
#           file: Dockerfile
#           push: false
#           tags: myapp:latest
#           cache-from: type=local,src=/tmp/.buildx-cache
#           cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

#       - name: Move new cache to old cache
#         if: success()
#         run: rsync -a /tmp/.buildx-cache-new/ /tmp/.buildx-cache/
